syntax = "proto3";
package producer;

// Service
service kafkaProducer {
  rpc producer(producerRequest) returns (producerResponse) {}
  rpc stopProduce(stopProduceRequest) returns (stopProduceResponse) {}
  rpc getProducerThreads(getProducerThreadsRequest) returns (getProducerThreadsResponse) {}
  rpc stopAllProducerThreads(getProducerThreadsRequest) returns (getProducerThreadsResponse) {}
  rpc deleteTopics(deleteTopicsRequest) returns (deleteTopicsResponse) {}
}

// Request Name
message producerRequest {
  string topicName=1;
  string streamUrl=2;
  int64 limit=3;
}
message stopProduceRequest {
  string thread_name=1;
}
message getProducerThreadsRequest{
  string data=1;
}
message stopAllProducerThreadsRequest{
  string data=1;
}
message deleteTopicsRequest{
  bytes data=1;
}


// Response Array
message producerResponse{
  string result=1;
  string thread_name=2;
}
message stopProduceResponse {
  string result=1;
}
message getProducerThreadsResponse{
  bytes data=1;
}
message stopAllProducerThreadsResponse{
  string data=1;
}
message deleteTopicsResponse{
  string data=1;
}