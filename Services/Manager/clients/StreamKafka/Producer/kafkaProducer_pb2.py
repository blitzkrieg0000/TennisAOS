# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kafkaProducer.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13kafkaProducer.proto\x12\x08producer\"\x1f\n\x0fproducerRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\".\n\x1egetAllProducerProcessesRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"+\n\x13stopProducerRequest\x12\x14\n\x0cprocess_name\x18\x01 \x01(\t\"/\n\x1fstopAllProducerProcessesRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"8\n\x10producerResponse\x12\x0e\n\x06result\x18\x01 \x01(\t\x12\x14\n\x0cprocess_name\x18\x02 \x01(\t\"/\n\x1fgetAllProducerProcessesResponse\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"&\n\x14stopProducerResponse\x12\x0e\n\x06result\x18\x01 \x01(\t\"2\n stopAllProducerProcessesResponse\x12\x0e\n\x06result\x18\x01 \x01(\t2\x8c\x03\n\rkafkaProducer\x12\x43\n\x08producer\x12\x19.producer.producerRequest\x1a\x1a.producer.producerResponse\"\x00\x12p\n\x17getAllProducerProcesses\x12(.producer.getAllProducerProcessesRequest\x1a).producer.getAllProducerProcessesResponse\"\x00\x12O\n\x0cstopProducer\x12\x1d.producer.stopProducerRequest\x1a\x1e.producer.stopProducerResponse\"\x00\x12s\n\x18stopAllProducerProcesses\x12).producer.stopAllProducerProcessesRequest\x1a*.producer.stopAllProducerProcessesResponse\"\x00\x62\x06proto3')



_PRODUCERREQUEST = DESCRIPTOR.message_types_by_name['producerRequest']
_GETALLPRODUCERPROCESSESREQUEST = DESCRIPTOR.message_types_by_name['getAllProducerProcessesRequest']
_STOPPRODUCERREQUEST = DESCRIPTOR.message_types_by_name['stopProducerRequest']
_STOPALLPRODUCERPROCESSESREQUEST = DESCRIPTOR.message_types_by_name['stopAllProducerProcessesRequest']
_PRODUCERRESPONSE = DESCRIPTOR.message_types_by_name['producerResponse']
_GETALLPRODUCERPROCESSESRESPONSE = DESCRIPTOR.message_types_by_name['getAllProducerProcessesResponse']
_STOPPRODUCERRESPONSE = DESCRIPTOR.message_types_by_name['stopProducerResponse']
_STOPALLPRODUCERPROCESSESRESPONSE = DESCRIPTOR.message_types_by_name['stopAllProducerProcessesResponse']
producerRequest = _reflection.GeneratedProtocolMessageType('producerRequest', (_message.Message,), {
  'DESCRIPTOR' : _PRODUCERREQUEST,
  '__module__' : 'kafkaProducer_pb2'
  # @@protoc_insertion_point(class_scope:producer.producerRequest)
  })
_sym_db.RegisterMessage(producerRequest)

getAllProducerProcessesRequest = _reflection.GeneratedProtocolMessageType('getAllProducerProcessesRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETALLPRODUCERPROCESSESREQUEST,
  '__module__' : 'kafkaProducer_pb2'
  # @@protoc_insertion_point(class_scope:producer.getAllProducerProcessesRequest)
  })
_sym_db.RegisterMessage(getAllProducerProcessesRequest)

stopProducerRequest = _reflection.GeneratedProtocolMessageType('stopProducerRequest', (_message.Message,), {
  'DESCRIPTOR' : _STOPPRODUCERREQUEST,
  '__module__' : 'kafkaProducer_pb2'
  # @@protoc_insertion_point(class_scope:producer.stopProducerRequest)
  })
_sym_db.RegisterMessage(stopProducerRequest)

stopAllProducerProcessesRequest = _reflection.GeneratedProtocolMessageType('stopAllProducerProcessesRequest', (_message.Message,), {
  'DESCRIPTOR' : _STOPALLPRODUCERPROCESSESREQUEST,
  '__module__' : 'kafkaProducer_pb2'
  # @@protoc_insertion_point(class_scope:producer.stopAllProducerProcessesRequest)
  })
_sym_db.RegisterMessage(stopAllProducerProcessesRequest)

producerResponse = _reflection.GeneratedProtocolMessageType('producerResponse', (_message.Message,), {
  'DESCRIPTOR' : _PRODUCERRESPONSE,
  '__module__' : 'kafkaProducer_pb2'
  # @@protoc_insertion_point(class_scope:producer.producerResponse)
  })
_sym_db.RegisterMessage(producerResponse)

getAllProducerProcessesResponse = _reflection.GeneratedProtocolMessageType('getAllProducerProcessesResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETALLPRODUCERPROCESSESRESPONSE,
  '__module__' : 'kafkaProducer_pb2'
  # @@protoc_insertion_point(class_scope:producer.getAllProducerProcessesResponse)
  })
_sym_db.RegisterMessage(getAllProducerProcessesResponse)

stopProducerResponse = _reflection.GeneratedProtocolMessageType('stopProducerResponse', (_message.Message,), {
  'DESCRIPTOR' : _STOPPRODUCERRESPONSE,
  '__module__' : 'kafkaProducer_pb2'
  # @@protoc_insertion_point(class_scope:producer.stopProducerResponse)
  })
_sym_db.RegisterMessage(stopProducerResponse)

stopAllProducerProcessesResponse = _reflection.GeneratedProtocolMessageType('stopAllProducerProcessesResponse', (_message.Message,), {
  'DESCRIPTOR' : _STOPALLPRODUCERPROCESSESRESPONSE,
  '__module__' : 'kafkaProducer_pb2'
  # @@protoc_insertion_point(class_scope:producer.stopAllProducerProcessesResponse)
  })
_sym_db.RegisterMessage(stopAllProducerProcessesResponse)

_KAFKAPRODUCER = DESCRIPTOR.services_by_name['kafkaProducer']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _PRODUCERREQUEST._serialized_start=33
  _PRODUCERREQUEST._serialized_end=64
  _GETALLPRODUCERPROCESSESREQUEST._serialized_start=66
  _GETALLPRODUCERPROCESSESREQUEST._serialized_end=112
  _STOPPRODUCERREQUEST._serialized_start=114
  _STOPPRODUCERREQUEST._serialized_end=157
  _STOPALLPRODUCERPROCESSESREQUEST._serialized_start=159
  _STOPALLPRODUCERPROCESSESREQUEST._serialized_end=206
  _PRODUCERRESPONSE._serialized_start=208
  _PRODUCERRESPONSE._serialized_end=264
  _GETALLPRODUCERPROCESSESRESPONSE._serialized_start=266
  _GETALLPRODUCERPROCESSESRESPONSE._serialized_end=313
  _STOPPRODUCERRESPONSE._serialized_start=315
  _STOPPRODUCERRESPONSE._serialized_end=353
  _STOPALLPRODUCERPROCESSESRESPONSE._serialized_start=355
  _STOPALLPRODUCERPROCESSESRESPONSE._serialized_end=405
  _KAFKAPRODUCER._serialized_start=408
  _KAFKAPRODUCER._serialized_end=804
# @@protoc_insertion_point(module_scope)
