# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kafkaConsumer.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13kafkaConsumer.proto\x12\x08\x63onsumer\"B\n\x0f\x43onsumerRequest\x12\x11\n\ttopicName\x18\x01 \x01(\t\x12\r\n\x05group\x18\x02 \x01(\t\x12\r\n\x05limit\x18\x03 \x01(\x03\"*\n\x1agetRunningConsumersRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\".\n\x1estopAllRunningConsumersRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\")\n\x19stopRunningCosumerRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\" \n\x10\x43onsumerResponse\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\"+\n\x1bgetRunningConsumersResponse\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\"/\n\x1fstopAllRunningConsumersResponse\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"*\n\x1astopRunningCosumerResponse\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t2\x91\x03\n\rkafkaConsumer\x12\x45\n\x08\x63onsumer\x12\x19.consumer.ConsumerRequest\x1a\x1a.consumer.ConsumerResponse\"\x00\x30\x01\x12\x64\n\x13getRunningConsumers\x12$.consumer.getRunningConsumersRequest\x1a%.consumer.getRunningConsumersResponse\"\x00\x12p\n\x17stopAllRunningConsumers\x12(.consumer.stopAllRunningConsumersRequest\x1a).consumer.stopAllRunningConsumersResponse\"\x00\x12\x61\n\x12stopRunningCosumer\x12#.consumer.stopRunningCosumerRequest\x1a$.consumer.stopRunningCosumerResponse\"\x00\x62\x06proto3')



_CONSUMERREQUEST = DESCRIPTOR.message_types_by_name['ConsumerRequest']
_GETRUNNINGCONSUMERSREQUEST = DESCRIPTOR.message_types_by_name['getRunningConsumersRequest']
_STOPALLRUNNINGCONSUMERSREQUEST = DESCRIPTOR.message_types_by_name['stopAllRunningConsumersRequest']
_STOPRUNNINGCOSUMERREQUEST = DESCRIPTOR.message_types_by_name['stopRunningCosumerRequest']
_CONSUMERRESPONSE = DESCRIPTOR.message_types_by_name['ConsumerResponse']
_GETRUNNINGCONSUMERSRESPONSE = DESCRIPTOR.message_types_by_name['getRunningConsumersResponse']
_STOPALLRUNNINGCONSUMERSRESPONSE = DESCRIPTOR.message_types_by_name['stopAllRunningConsumersResponse']
_STOPRUNNINGCOSUMERRESPONSE = DESCRIPTOR.message_types_by_name['stopRunningCosumerResponse']
ConsumerRequest = _reflection.GeneratedProtocolMessageType('ConsumerRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONSUMERREQUEST,
  '__module__' : 'kafkaConsumer_pb2'
  # @@protoc_insertion_point(class_scope:consumer.ConsumerRequest)
  })
_sym_db.RegisterMessage(ConsumerRequest)

getRunningConsumersRequest = _reflection.GeneratedProtocolMessageType('getRunningConsumersRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETRUNNINGCONSUMERSREQUEST,
  '__module__' : 'kafkaConsumer_pb2'
  # @@protoc_insertion_point(class_scope:consumer.getRunningConsumersRequest)
  })
_sym_db.RegisterMessage(getRunningConsumersRequest)

stopAllRunningConsumersRequest = _reflection.GeneratedProtocolMessageType('stopAllRunningConsumersRequest', (_message.Message,), {
  'DESCRIPTOR' : _STOPALLRUNNINGCONSUMERSREQUEST,
  '__module__' : 'kafkaConsumer_pb2'
  # @@protoc_insertion_point(class_scope:consumer.stopAllRunningConsumersRequest)
  })
_sym_db.RegisterMessage(stopAllRunningConsumersRequest)

stopRunningCosumerRequest = _reflection.GeneratedProtocolMessageType('stopRunningCosumerRequest', (_message.Message,), {
  'DESCRIPTOR' : _STOPRUNNINGCOSUMERREQUEST,
  '__module__' : 'kafkaConsumer_pb2'
  # @@protoc_insertion_point(class_scope:consumer.stopRunningCosumerRequest)
  })
_sym_db.RegisterMessage(stopRunningCosumerRequest)

ConsumerResponse = _reflection.GeneratedProtocolMessageType('ConsumerResponse', (_message.Message,), {
  'DESCRIPTOR' : _CONSUMERRESPONSE,
  '__module__' : 'kafkaConsumer_pb2'
  # @@protoc_insertion_point(class_scope:consumer.ConsumerResponse)
  })
_sym_db.RegisterMessage(ConsumerResponse)

getRunningConsumersResponse = _reflection.GeneratedProtocolMessageType('getRunningConsumersResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETRUNNINGCONSUMERSRESPONSE,
  '__module__' : 'kafkaConsumer_pb2'
  # @@protoc_insertion_point(class_scope:consumer.getRunningConsumersResponse)
  })
_sym_db.RegisterMessage(getRunningConsumersResponse)

stopAllRunningConsumersResponse = _reflection.GeneratedProtocolMessageType('stopAllRunningConsumersResponse', (_message.Message,), {
  'DESCRIPTOR' : _STOPALLRUNNINGCONSUMERSRESPONSE,
  '__module__' : 'kafkaConsumer_pb2'
  # @@protoc_insertion_point(class_scope:consumer.stopAllRunningConsumersResponse)
  })
_sym_db.RegisterMessage(stopAllRunningConsumersResponse)

stopRunningCosumerResponse = _reflection.GeneratedProtocolMessageType('stopRunningCosumerResponse', (_message.Message,), {
  'DESCRIPTOR' : _STOPRUNNINGCOSUMERRESPONSE,
  '__module__' : 'kafkaConsumer_pb2'
  # @@protoc_insertion_point(class_scope:consumer.stopRunningCosumerResponse)
  })
_sym_db.RegisterMessage(stopRunningCosumerResponse)

_KAFKACONSUMER = DESCRIPTOR.services_by_name['kafkaConsumer']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CONSUMERREQUEST._serialized_start=33
  _CONSUMERREQUEST._serialized_end=99
  _GETRUNNINGCONSUMERSREQUEST._serialized_start=101
  _GETRUNNINGCONSUMERSREQUEST._serialized_end=143
  _STOPALLRUNNINGCONSUMERSREQUEST._serialized_start=145
  _STOPALLRUNNINGCONSUMERSREQUEST._serialized_end=191
  _STOPRUNNINGCOSUMERREQUEST._serialized_start=193
  _STOPRUNNINGCOSUMERREQUEST._serialized_end=234
  _CONSUMERRESPONSE._serialized_start=236
  _CONSUMERRESPONSE._serialized_end=268
  _GETRUNNINGCONSUMERSRESPONSE._serialized_start=270
  _GETRUNNINGCONSUMERSRESPONSE._serialized_end=313
  _STOPALLRUNNINGCONSUMERSRESPONSE._serialized_start=315
  _STOPALLRUNNINGCONSUMERSRESPONSE._serialized_end=362
  _STOPRUNNINGCOSUMERRESPONSE._serialized_start=364
  _STOPRUNNINGCOSUMERRESPONSE._serialized_end=406
  _KAFKACONSUMER._serialized_start=409
  _KAFKACONSUMER._serialized_end=810
# @@protoc_insertion_point(module_scope)
